# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
PCH = src/pch.h
PCH_PLACEHOLDER = $(OBJDIR)/$(notdir $(PCH))
GCH = $(PCH_PLACEHOLDER).gch
INCLUDES += -Isrc -IInclude -I../vendor/entt/entt/src -I../vendor/glfw/glfw/include -I../vendor/glm/glm -I../vendor/imgui/imgui -I../vendor/stb/stb -I../vendor/tinygltf/tinygltf
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../bin/Debug-linux-x86_64/Ash
TARGET = $(TARGETDIR)/libAsh.a
OBJDIR = ../bin-int/Debug-linux-x86_64/Ash
DEFINES += -DASH_PLATFORM_LINUX -DASH_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
LIBS += ../vendor/glfw/bin/Debug-linux-x86_64/GLFW/libGLFW.a ../vendor/imgui/bin/Debug-linux-x86_64/ImGui/libImGui.a -lvulkan-1
LDDEPS += ../vendor/glfw/bin/Debug-linux-x86_64/GLFW/libGLFW.a ../vendor/imgui/bin/Debug-linux-x86_64/ImGui/libImGui.a
ALL_LDFLAGS += $(LDFLAGS) -LLib -L/usr/lib64 -m64

else ifeq ($(config),release)
TARGETDIR = ../bin/Release-linux-x86_64/Ash
TARGET = $(TARGETDIR)/libAsh.a
OBJDIR = ../bin-int/Release-linux-x86_64/Ash
DEFINES += -DASH_PLATFORM_LINUX -DASH_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -g -std=c++17
LIBS += ../vendor/glfw/bin/Release-linux-x86_64/GLFW/libGLFW.a ../vendor/imgui/bin/Release-linux-x86_64/ImGui/libImGui.a -lvulkan-1
LDDEPS += ../vendor/glfw/bin/Release-linux-x86_64/GLFW/libGLFW.a ../vendor/imgui/bin/Release-linux-x86_64/ImGui/libImGui.a
ALL_LDFLAGS += $(LDFLAGS) -LLib -L/usr/lib64 -m64

else ifeq ($(config),dist)
TARGETDIR = ../bin/Dist-linux-x86_64/Ash
TARGET = $(TARGETDIR)/libAsh.a
OBJDIR = ../bin-int/Dist-linux-x86_64/Ash
DEFINES += -DASH_PLATFORM_LINUX -DASH_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += ../vendor/glfw/bin/Dist-linux-x86_64/GLFW/libGLFW.a ../vendor/imgui/bin/Dist-linux-x86_64/ImGui/libImGui.a -lvulkan-1
LDDEPS += ../vendor/glfw/bin/Dist-linux-x86_64/GLFW/libGLFW.a ../vendor/imgui/bin/Dist-linux-x86_64/ImGui/libImGui.a
ALL_LDFLAGS += $(LDFLAGS) -LLib -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/BasicMovementComponent.o
GENERATED += $(OBJDIR)/Buffer.o
GENERATED += $(OBJDIR)/CameraComponent.o
GENERATED += $(OBJDIR)/Component.o
GENERATED += $(OBJDIR)/Config.o
GENERATED += $(OBJDIR)/Context.o
GENERATED += $(OBJDIR)/Cube.o
GENERATED += $(OBJDIR)/Defaults.o
GENERATED += $(OBJDIR)/Descriptor.o
GENERATED += $(OBJDIR)/Device.o
GENERATED += $(OBJDIR)/Entity.o
GENERATED += $(OBJDIR)/ErrorCallbacks.o
GENERATED += $(OBJDIR)/Event.o
GENERATED += $(OBJDIR)/EventDispatcher.o
GENERATED += $(OBJDIR)/File.o
GENERATED += $(OBJDIR)/Input.o
GENERATED += $(OBJDIR)/Instance.o
GENERATED += $(OBJDIR)/LightComponent.o
GENERATED += $(OBJDIR)/Log.o
GENERATED += $(OBJDIR)/Model.o
GENERATED += $(OBJDIR)/ModelComponent.o
GENERATED += $(OBJDIR)/Pipeline.o
GENERATED += $(OBJDIR)/PipelineConfig.o
GENERATED += $(OBJDIR)/Quad.o
GENERATED += $(OBJDIR)/RenderSystem.o
GENERATED += $(OBJDIR)/Scene.o
GENERATED += $(OBJDIR)/SingleTimeCommands.o
GENERATED += $(OBJDIR)/SwapChain.o
GENERATED += $(OBJDIR)/SwapChainTextures.o
GENERATED += $(OBJDIR)/TagComponent.o
GENERATED += $(OBJDIR)/Texture.o
GENERATED += $(OBJDIR)/TransformComponent.o
GENERATED += $(OBJDIR)/Window.o
GENERATED += $(OBJDIR)/pch.o
OBJECTS += $(OBJDIR)/BasicMovementComponent.o
OBJECTS += $(OBJDIR)/Buffer.o
OBJECTS += $(OBJDIR)/CameraComponent.o
OBJECTS += $(OBJDIR)/Component.o
OBJECTS += $(OBJDIR)/Config.o
OBJECTS += $(OBJDIR)/Context.o
OBJECTS += $(OBJDIR)/Cube.o
OBJECTS += $(OBJDIR)/Defaults.o
OBJECTS += $(OBJDIR)/Descriptor.o
OBJECTS += $(OBJDIR)/Device.o
OBJECTS += $(OBJDIR)/Entity.o
OBJECTS += $(OBJDIR)/ErrorCallbacks.o
OBJECTS += $(OBJDIR)/Event.o
OBJECTS += $(OBJDIR)/EventDispatcher.o
OBJECTS += $(OBJDIR)/File.o
OBJECTS += $(OBJDIR)/Input.o
OBJECTS += $(OBJDIR)/Instance.o
OBJECTS += $(OBJDIR)/LightComponent.o
OBJECTS += $(OBJDIR)/Log.o
OBJECTS += $(OBJDIR)/Model.o
OBJECTS += $(OBJDIR)/ModelComponent.o
OBJECTS += $(OBJDIR)/Pipeline.o
OBJECTS += $(OBJDIR)/PipelineConfig.o
OBJECTS += $(OBJDIR)/Quad.o
OBJECTS += $(OBJDIR)/RenderSystem.o
OBJECTS += $(OBJDIR)/Scene.o
OBJECTS += $(OBJDIR)/SingleTimeCommands.o
OBJECTS += $(OBJDIR)/SwapChain.o
OBJECTS += $(OBJDIR)/SwapChainTextures.o
OBJECTS += $(OBJDIR)/TagComponent.o
OBJECTS += $(OBJDIR)/Texture.o
OBJECTS += $(OBJDIR)/TransformComponent.o
OBJECTS += $(OBJDIR)/Window.o
OBJECTS += $(OBJDIR)/pch.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Ash
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Ash
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/BasicMovementComponent.o: src/Components/BasicMovementComponent.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CameraComponent.o: src/Components/CameraComponent.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Component.o: src/Components/Component.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LightComponent.o: src/Components/LightComponent.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ModelComponent.o: src/Components/ModelComponent.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TagComponent.o: src/Components/TagComponent.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TransformComponent.o: src/Components/TransformComponent.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Config.o: src/Config/Config.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ErrorCallbacks.o: src/Core/ErrorCallbacks.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Log.o: src/Core/Log.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Entity.o: src/Entity/Entity.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Event.o: src/Events/Event.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EventDispatcher.o: src/Events/EventDispatcher.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Input.o: src/Input/Input.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Model.o: src/Model/Model.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Scene.o: src/Scene/Scene.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/File.o: src/Utility/File.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Buffer.o: src/Vulkan/Buffer/Buffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Context.o: src/Vulkan/Context/Context.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Defaults.o: src/Vulkan/Defaults/Defaults.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Descriptor.o: src/Vulkan/Descriptor/Descriptor.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Device.o: src/Vulkan/Device/Device.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Instance.o: src/Vulkan/Instance/Instance.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Pipeline.o: src/Vulkan/RenderSystem/Pipeline.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PipelineConfig.o: src/Vulkan/RenderSystem/PipelineConfig.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RenderSystem.o: src/Vulkan/RenderSystem/RenderSystem.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SwapChain.o: src/Vulkan/SwapChain/SwapChain.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SwapChainTextures.o: src/Vulkan/Texture/SwapChainTextures.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Texture.o: src/Vulkan/Texture/Texture.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SingleTimeCommands.o: src/Vulkan/Utility/Commands/SingleTimeCommands.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Cube.o: src/Vulkan/Utility/Shapes/Cube.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Quad.o: src/Vulkan/Utility/Shapes/Quad.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Window.o: src/Vulkan/Window/Window.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/pch.o: src/pch.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif